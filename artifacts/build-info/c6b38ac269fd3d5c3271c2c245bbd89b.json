{
	"id": "c6b38ac269fd3d5c3271c2c245bbd89b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"StorageVictim_PreAudit.sol": {
				"content": "pragma solidity ^0.4.23;\r\n\r\ncontract StorageVictim {\r\n\r\n   address owner;\r\n   \r\n   struct Storage {\r\n   \r\n       address user;\r\n       uint amount;\r\n   }\r\n\r\n   mapping(address => Storage) storages;\r\n\r\n   function StorageVictim() public {\r\n   \r\n       owner = msg.sender;\r\n   }\r\n\r\n   function store(uint _amount) public {\r\n   \r\n       // uninitialised pointer. str.user points to the storage address 0 which is \"owner\"\r\n       \r\n       Storage str;\r\n       \r\n       str.user = msg.sender;\r\n       \r\n       str.amount = _amount;\r\n\r\n       storages[msg.sender] = str;\r\n\r\n   }\r\n   function getStore() public view returns (address, uint) {\r\n       \r\n       Storage str = storages[msg.sender];\r\n       \r\n       return (str.user, str.amount);\r\n   }\r\n   \r\n   function getOwner() public view returns (address) {\r\n       \r\n       return owner;\r\n   }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"StorageVictim_PreAudit.sol": {
				"StorageVictim": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "store",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getStore",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"StorageVictim_PreAudit.sol\":28:842  contract StorageVictim {\r... */\n  mstore(0x40, 0x80)\n    /* \"StorageVictim_PreAudit.sol\":204:276  function StorageVictim() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"StorageVictim_PreAudit.sol\":204:276  function StorageVictim() public {\r... */\n  pop\n    /* \"StorageVictim_PreAudit.sol\":259:269  msg.sender */\n  caller\n    /* \"StorageVictim_PreAudit.sol\":251:256  owner */\n  0x0\n  dup1\n    /* \"StorageVictim_PreAudit.sol\":251:269  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"StorageVictim_PreAudit.sol\":28:842  contract StorageVictim {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"StorageVictim_PreAudit.sol\":28:842  contract StorageVictim {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6057361d\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc2722ecc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"StorageVictim_PreAudit.sol\":283:572  function store(uint _amount) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"StorageVictim_PreAudit.sol\":283:572  function store(uint _amount) public {\r... */\n      pop\n      tag_6\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"StorageVictim_PreAudit.sol\":751:839  function getOwner() public view returns (address) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"StorageVictim_PreAudit.sol\":751:839  function getOwner() public view returns (address) {\r... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StorageVictim_PreAudit.sol\":577:741  function getStore() public view returns (address, uint) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"StorageVictim_PreAudit.sol\":577:741  function getStore() public view returns (address, uint) {\r... */\n      pop\n      tag_12\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StorageVictim_PreAudit.sol\":283:572  function store(uint _amount) public {\r... */\n    tag_7:\n        /* \"StorageVictim_PreAudit.sol\":435:446  Storage str */\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":476:486  msg.sender */\n      caller\n        /* \"StorageVictim_PreAudit.sol\":465:468  str */\n      dup2\n        /* \"StorageVictim_PreAudit.sol\":465:473  str.user */\n      0x0\n      add\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":465:486  str.user = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"StorageVictim_PreAudit.sol\":518:525  _amount */\n      dup2\n        /* \"StorageVictim_PreAudit.sol\":505:508  str */\n      dup2\n        /* \"StorageVictim_PreAudit.sol\":505:515  str.amount */\n      0x1\n      add\n        /* \"StorageVictim_PreAudit.sol\":505:525  str.amount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StorageVictim_PreAudit.sol\":560:563  str */\n      dup1\n        /* \"StorageVictim_PreAudit.sol\":537:545  storages */\n      0x1\n        /* \"StorageVictim_PreAudit.sol\":537:557  storages[msg.sender] */\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":546:556  msg.sender */\n      caller\n        /* \"StorageVictim_PreAudit.sol\":537:557  storages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"StorageVictim_PreAudit.sol\":537:563  storages[msg.sender] = str */\n      0x0\n      dup3\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      0x0\n      add\n      exp(0x100, 0x0)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x1\n      dup3\n      add\n      sload\n      dup2\n      0x1\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"StorageVictim_PreAudit.sol\":283:572  function store(uint _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"StorageVictim_PreAudit.sol\":751:839  function getOwner() public view returns (address) {\r... */\n    tag_10:\n        /* \"StorageVictim_PreAudit.sol\":792:799  address */\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":827:832  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StorageVictim_PreAudit.sol\":820:832  return owner */\n      swap1\n      pop\n        /* \"StorageVictim_PreAudit.sol\":751:839  function getOwner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"StorageVictim_PreAudit.sol\":577:741  function getStore() public view returns (address, uint) {\r... */\n    tag_13:\n        /* \"StorageVictim_PreAudit.sol\":618:625  address */\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":627:631  uint */\n      dup1\n        /* \"StorageVictim_PreAudit.sol\":652:663  Storage str */\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":666:674  storages */\n      0x1\n        /* \"StorageVictim_PreAudit.sol\":666:686  storages[msg.sender] */\n      0x0\n        /* \"StorageVictim_PreAudit.sol\":675:685  msg.sender */\n      caller\n        /* \"StorageVictim_PreAudit.sol\":666:686  storages[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"StorageVictim_PreAudit.sol\":652:686  Storage str = storages[msg.sender] */\n      swap1\n      pop\n        /* \"StorageVictim_PreAudit.sol\":713:716  str */\n      dup1\n        /* \"StorageVictim_PreAudit.sol\":713:721  str.user */\n      0x0\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StorageVictim_PreAudit.sol\":723:726  str */\n      dup2\n        /* \"StorageVictim_PreAudit.sol\":723:733  str.amount */\n      0x1\n      add\n      sload\n        /* \"StorageVictim_PreAudit.sol\":705:734  return (str.user, str.amount) */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"StorageVictim_PreAudit.sol\":577:741  function getStore() public view returns (address, uint) {\r... */\n      pop\n      swap1\n      swap2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058209d41917327f4945694d847e07fa4961d5b6b4478d931b9ffe9bc8baec5b1f04c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610312806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636057361d1461005c578063893d20e814610089578063c2722ecc146100e0575b600080fd5b34801561006857600080fd5b506100876004803603810190808035906020019092919050505061013e565b005b34801561009557600080fd5b5061009e610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ec57600080fd5b506100f561026d565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6000338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001018190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101559050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154925092505090915600a165627a7a723058209d41917327f4945694d847e07fa4961d5b6b4478d931b9ffe9bc8baec5b1f04c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x312 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6057361D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xC2722ECC EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP14 COINBASE SWAP2 PUSH20 0x27F4945694D847E07FA4961D5B6B4478D931B9FF 0xe9 0xbc DUP12 0xae 0xc5 0xb1 CREATE 0x4c STOP 0x29 ",
							"sourceMap": "28:814:0:-;;;204:72;8:9:-1;5:2;;;30:1;27;20:12;5:2;204:72:0;259:10;251:5;;:18;;;;;;;;;;;;;;;;;;28:814;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636057361d1461005c578063893d20e814610089578063c2722ecc146100e0575b600080fd5b34801561006857600080fd5b506100876004803603810190808035906020019092919050505061013e565b005b34801561009557600080fd5b5061009e610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ec57600080fd5b506100f561026d565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6000338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001018190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182015481600101559050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154925092505090915600a165627a7a723058209d41917327f4945694d847e07fa4961d5b6b4478d931b9ffe9bc8baec5b1f04c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6057361D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xC2722ECC EQ PUSH2 0xE0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x26D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP14 COINBASE SWAP2 PUSH20 0x27F4945694D847E07FA4961D5B6B4478D931B9FF 0xe9 0xbc DUP12 0xae 0xc5 0xb1 CREATE 0x4c STOP 0x29 ",
							"sourceMap": "28:814:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:289;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:289:0;;;;;;;;;;;;;;;;;;;;;;;;;;751:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;751:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;577:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;577:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:289;435:11;476:10;465:3;:8;;;:21;;;;;;;;;;;;;;;;;;518:7;505:3;:10;;:20;;;;560:3;537:8;:20;546:10;537:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:289;;:::o;751:88::-;792:7;827:5;;;;;;;;;;;820:12;;751:88;:::o;577:164::-;618:7;627:4;652:11;666:8;:20;675:10;666:20;;;;;;;;;;;;;;;652:34;;713:3;:8;;;;;;;;;;;;723:3;:10;;;705:29;;;;577:164;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "157200",
								"executionCost": "20468",
								"totalCost": "177668"
							},
							"external": {
								"getOwner()": "472",
								"getStore()": "842",
								"store(uint256)": "81323"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 842,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "MSTORE"
								},
								{
									"begin": 204,
									"end": 276,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 204,
									"end": 276,
									"name": "POP"
								},
								{
									"begin": 259,
									"end": 269,
									"name": "CALLER"
								},
								{
									"begin": 251,
									"end": 256,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 251,
									"end": 256,
									"name": "DUP1"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "EXP"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "DUP2"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "SLOAD"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "DUP2"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "MUL"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "NOT"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "AND"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "DUP4"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "AND"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "MUL"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "OR"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "SWAP1"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "SSTORE"
								},
								{
									"begin": 251,
									"end": 269,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 842,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209d41917327f4945694d847e07fa4961d5b6b4478d931b9ffe9bc8baec5b1f04c0029",
									".code": [
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "6057361D"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "C2722ECC"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 842,
											"name": "REVERT"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SUB"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "DUP2"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SWAP3"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SWAP2"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "JUMP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "STOP"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "JUMP"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "MLOAD"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "DUP3"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "AND"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "DUP2"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "MSTORE"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "MLOAD"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "SWAP2"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "SUB"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "RETURN"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "JUMP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "JUMPDEST"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "MLOAD"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "DUP4"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "AND"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "AND"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "DUP3"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "DUP2"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "MSTORE"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "ADD"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "SWAP3"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "MLOAD"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "DUP1"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "SWAP2"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "SUB"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "RETURN"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 476,
											"end": 486,
											"name": "CALLER"
										},
										{
											"begin": 465,
											"end": 468,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 473,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 465,
											"end": 473,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 473,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "MUL"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "NOT"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "DUP4"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "MUL"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "OR"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "SSTORE"
										},
										{
											"begin": 465,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 518,
											"end": 525,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 515,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 505,
											"end": 515,
											"name": "ADD"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP2"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "SWAP1"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "SSTORE"
										},
										{
											"begin": 505,
											"end": 525,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 537,
											"end": 545,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 546,
											"end": 556,
											"name": "CALLER"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "AND"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "AND"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "MSTORE"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "MSTORE"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "KECCAK256"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "EXP"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DIV"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "AND"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "EXP"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "MUL"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "NOT"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "AND"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP4"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "AND"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "MUL"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "OR"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SSTORE"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP3"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SLOAD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "DUP2"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "ADD"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SSTORE"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 572,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "JUMPDEST"
										},
										{
											"begin": 792,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "SLOAD"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "EXP"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DIV"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 820,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 820,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 839,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "JUMPDEST"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 627,
											"end": 631,
											"name": "DUP1"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 666,
											"end": 674,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "AND"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "AND"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "DUP2"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "MSTORE"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "ADD"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "SWAP1"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "DUP2"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "MSTORE"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "ADD"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 666,
											"end": 686,
											"name": "KECCAK256"
										},
										{
											"begin": 652,
											"end": 686,
											"name": "SWAP1"
										},
										{
											"begin": 652,
											"end": 686,
											"name": "POP"
										},
										{
											"begin": 713,
											"end": 716,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "EXP"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "DIV"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP2"
										},
										{
											"begin": 723,
											"end": 733,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 723,
											"end": 733,
											"name": "ADD"
										},
										{
											"begin": 723,
											"end": 733,
											"name": "SLOAD"
										},
										{
											"begin": 705,
											"end": 734,
											"name": "SWAP3"
										},
										{
											"begin": 705,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 734,
											"name": "SWAP3"
										},
										{
											"begin": 705,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "POP"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "SWAP1"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "SWAP2"
										},
										{
											"begin": 577,
											"end": 741,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getOwner()": "893d20e8",
							"getStore()": "c2722ecc",
							"store(uint256)": "6057361d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"store\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"StorageVictim_PreAudit.sol\":\"StorageVictim\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"StorageVictim_PreAudit.sol\":{\"keccak256\":\"0xb1acec1f6fa8d835c9e22ecc75ab62c8c4e95fd5773a9f4a3bd2586d8dcb41bf\",\"urls\":[\"bzzr://fabd1e588b8ebe9bc7f9696d7ffef8cae923015377742a1603c68c104ff99945\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "StorageVictim_PreAudit.sol:15:4: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n   function StorageVictim() public {\r\n   ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 276,
					"file": "StorageVictim_PreAudit.sol",
					"start": 204
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "StorageVictim_PreAudit.sol:24:8: Warning: Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.\n       Storage str;\r\n       ^---------^\n",
				"message": "Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 446,
					"file": "StorageVictim_PreAudit.sol",
					"start": 435
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "StorageVictim_PreAudit.sol:35:8: Warning: Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.\n       Storage str = storages[msg.sender];\r\n       ^---------^\n",
				"message": "Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 663,
					"file": "StorageVictim_PreAudit.sol",
					"start": 652
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "StorageVictim_PreAudit.sol:24:8: Warning: Uninitialized storage pointer. Did you mean '<type> memory str'?\n       Storage str;\r\n       ^---------^\n",
				"message": "Uninitialized storage pointer. Did you mean '<type> memory str'?",
				"severity": "warning",
				"sourceLocation": {
					"end": 446,
					"file": "StorageVictim_PreAudit.sol",
					"start": 435
				},
				"type": "Warning"
			}
		],
		"sources": {
			"StorageVictim_PreAudit.sol": {
				"ast": {
					"absolutePath": "StorageVictim_PreAudit.sol",
					"exportedSymbols": {
						"StorageVictim": [
							80
						]
					},
					"id": 81,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "StorageVictim",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "59:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "59:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "StorageVictim.Storage",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 5,
											"name": "user",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "113:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 4,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "113:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "135:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "135:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Storage",
									"nodeType": "StructDefinition",
									"scope": 80,
									"src": "83:70:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"name": "storages",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "160:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Storage_$8_storage_$",
										"typeString": "mapping(address => struct StorageVictim.Storage)"
									},
									"typeName": {
										"id": 11,
										"keyType": {
											"id": 9,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "168:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "160:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Storage_$8_storage_$",
											"typeString": "mapping(address => struct StorageVictim.Storage)"
										},
										"valueType": {
											"contractScope": null,
											"id": 10,
											"name": "Storage",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "179:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
												"typeString": "struct StorageVictim.Storage"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "236:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "251:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 16,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "259:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "251:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "251:18:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "StorageVictim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:0:0"
									},
									"scope": 80,
									"src": "204:72:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "319:253:0",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"name": "str",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "435:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
															"typeString": "struct StorageVictim.Storage"
														},
														"typeName": {
															"contractScope": null,
															"id": 26,
															"name": "Storage",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "435:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
																"typeString": "struct StorageVictim.Storage"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 28,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "435:11:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 29,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "465:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
																"typeString": "struct StorageVictim.Storage storage pointer"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "user",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 32,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "476:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "476:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "465:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "465:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 36,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "505:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
																"typeString": "struct StorageVictim.Storage storage pointer"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "505:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "505:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 42,
															"name": "storages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "537:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Storage_$8_storage_$",
																"typeString": "mapping(address => struct StorageVictim.Storage storage ref)"
															}
														},
														"id": 45,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "546:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "546:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "537:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$8_storage",
															"typeString": "struct StorageVictim.Storage storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "str",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "560:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
															"typeString": "struct StorageVictim.Storage storage pointer"
														}
													},
													"src": "537:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Storage_$8_storage",
														"typeString": "struct StorageVictim.Storage storage ref"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "537:26:0"
											}
										]
									},
									"documentation": null,
									"id": 50,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "store",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "297:14:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:0"
									},
									"scope": 80,
									"src": "283:289:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "633:108:0",
										"statements": [
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "str",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "652:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
															"typeString": "struct StorageVictim.Storage"
														},
														"typeName": {
															"contractScope": null,
															"id": 57,
															"name": "Storage",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
																"typeString": "struct StorageVictim.Storage"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 59,
														"name": "storages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "666:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Storage_$8_storage_$",
															"typeString": "mapping(address => struct StorageVictim.Storage storage ref)"
														}
													},
													"id": 62,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 60,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "675:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "675:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "666:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Storage_$8_storage",
														"typeString": "struct StorageVictim.Storage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "652:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 64,
																"name": "str",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "713:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
																	"typeString": "struct StorageVictim.Storage storage pointer"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "user",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "713:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 66,
																"name": "str",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "723:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Storage_$8_storage_ptr",
																	"typeString": "struct StorageVictim.Storage storage pointer"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 7,
															"src": "723:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 68,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "712:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 56,
												"id": 69,
												"nodeType": "Return",
												"src": "705:29:0"
											}
										]
									},
									"documentation": null,
									"id": 71,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getStore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "627:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "627:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "617:15:0"
									},
									"scope": 80,
									"src": "577:164:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "801:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 76,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 75,
												"id": 77,
												"nodeType": "Return",
												"src": "820:12:0"
											}
										]
									},
									"documentation": null,
									"id": 79,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "768:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "792:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "791:9:0"
									},
									"scope": 80,
									"src": "751:88:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 81,
							"src": "28:814:0"
						}
					],
					"src": "0:842:0"
				},
				"id": 0
			}
		}
	}
}